@2024.3.25
- 교재 : 윤창석

점심시간 : 11시50분~13시

* 프로그램 설치
1) 반디집
2) 어도브 reader

* 수업 과목
1. java
2. python
3. bigdata
4. machine learning
5. jsp
6. spring
7. spring boot


* jdk 다운로드
1) oracle.com
2) Products -> Java
3) Download Java 클릭
4) JDK 17 선택
5) Windows 탭 선택
6) "x64 Installer" 클릭
7) 다운로드된 파일은 util 폴더에 저장

* java의 특징
=> 클래스 중심의 언어

* python의 특징
=> 명령어, 함수, 클래스 중심의 언어


* eclipse 다운로드
1) eclipse.org 방문
2) Download 클릭
3) "Download Packages" 클릭
4) "Eclipse IDE for Java Developers" Windows x86_64 클릭
5) 다운로드된 파일은 util 폴더에 저장


* 코드 편집 프로그램
1. eclipse
2. visual code
3. intelli J
4. ......


* eclipse 엔코딩 확인
=> 메뉴 -> Window -> Preferences
=> General -> Workspace 클릭
=> Text file encoding : UTF-8 확인
=> "Apply and Close" 클릭


* eclipse 글자 크기 조정
=> Ctrl + : 크게
=> Ctrl - : 작게


* 코딩 작업
1) 코드 타이핑
2) 저장
3) 실행버튼 클릭 (또는 단축키 Ctrl f11)



* java의 데이터 종류
1) 정수		: 소수점이 없는 숫자			1  5 100 -1
2) 실수		: 소수점이 있는 숫자			1.0 5.5  -1.7
3) 문자		: 작은 따옴표로 감싸인 문자 1개	'a'  '한'
4) 문자열		: 큰 따옴표로 감싸인 문자들		"a"  "abc"  "홍길동"
5) boolean값	: 참과 거짓을 나타내는 데이터		true  false


* 주석 (comment)
=> 메모글
=> 명령어를 지우지 않고 동작을 시키고 싶지 않을 때 사용

1) 한 줄 주석
// 메모
2) 여러줄 주석
/* 메모1
   메모2
*/
3) 여러줄 주석
/** 메모1
     메모2
*/
	

* 컴퓨터에 데이터 저장
1) 소량의 데이터 저장
2) 대량의 데이터 저장


* 변수 (variable)
=> 데이터를 저장하는 메모리 상의 공간을 나타냄

* 데이터 저장 방법
=> 변수를 만들어서 저장
(1) 메모리 상에 공간 확보
(2) 데이터 저장

1) 자료형 변수명;		// 컴퓨터에게 데이터를 저장할 공간을 주세요.
   변수명 = 데이터;	// 그 공간에 데이터를 저장하세요.
    int a;
    a = 5;
2) 자료형 변수명 = 데이터;
    int a = 5;

* 자료형 (data type)
=> 데이터의 종류와 변수의 크기를 나타냄
=> 컴퓨터에게 몇 byte 공간을 달라고 요청하는 명령어이다.

* 컴퓨터 RAM 단위
1) bit : 0 또는 1 데이터 1개를 저장하는 단위
2) byte : bit 8개를 모은 단위
   1byte = 8bit

-----------------------------------------------------
문제1. 정수 256, 실수 126.776 를 변수를 만들어서 저장하고 저장된 결과를 출력하세요.

class name : Practice1.java

<실행 결과>
256
126.776


-----------------------------------------------
* java의 기본 데이터 크기
1) 정수 : 4byte
2) 실수 : 8byte

-----------------------------------------------
문제2. 문자 '홍', boolean 값 false를 변수에 저장하고, 출력하세요.
단, 출력은 printf()를 사용

class name : Practice2.java

<실행 결과>
ch = 홍
b = false

--------------------------------------------
문제3. 정수 50, 실수 178.5, 문자 'A', boolean 값 true를 변수에 저장하고, 출력하세요. 
단, 출력은 정수 println, 실수 print, 나머지는 printf를 사용

class name : Practice3.java


--------------------------------------------

* 문자열
=> 문자들의 집합
"a"
"abc"
"abcdefgaslkdj;akdjf;aksdjfaksdj;aksdjfadf"

* 문자열 저장
=> 컴퓨터는 문자열을 만나면 무조건 RAM에 저장을 하고, 
     저장된 곳의 주소를 변수에 저장해서 사용한다.
1) 자료형 변수명;
    변수명 = "문자열";
    String str;		// 레퍼런스 변수 만들기
    str = "abcdefg";	// 문자열의 주소를 레퍼런스 변수에 저장하기
2) 자료형 변수명 = "문자열";
    String str = "abcdefg";

* 자바 변수의 종류
1) 일반 변수 (= 데이터 변수)
   => 데이터를 저장하는 변수
2) 레퍼런스(reference) 변수
   => 주소를 저장하는 변수

-------------------------------------------------------
문제4. 정수 50, 실수 178.5, 문자 'A', boolean 값 true, 문자열 "홍길동"을 변수에 저장하고, 출력하세요. 
단, 출력은 printf를 사용

class name : Practice4.java







=========================================
@2024.3.26

* 컴퓨터
=> 수학 계산을 빠르고 정확하게 하기 위한 기계

* 프로그램
=> 컴퓨터를 동작시키는 명령어들의 집합
1) 수학 계산

* 프로그램의 동작
1) 컴퓨터에 데이터를 저장
2) 명령어를 통해서 데이터를 가공해서 원하는 결과를 구하는 것

* 대입
=> 데이터를 변수에 저장하라는 의미
------------------------------------------
문제5. 각각변수에 대입하여 출력하시오

조건1) data는 이효리, 개발부, 대리, 1500000로 대입
      변수명은 각각  name, department, position, sal로 할것
조건2) 출력은 아래와 같은 출력함수를 이용하시오

class name : Practice5.java

<실행 결과>
이름 : 이효리     ---> println
부서 : 개발부     ---> printf  
직위 : 대리       ---> print 1번만써서 직위, 급여출력
급여 : 1500000원

-------------------------------------
* 자바 명령어의 종류
1) 연산자
2) 제어문
3) API 클래스

* 라이브러리
=> 클래스들의 집합

* API 클래스를 사용하기
1) import를 시켜주어야 함
  => 어떤 라이브러리를 사용할 지를 정해주는 것
2) 대부분 new를 이용해서 객체를 생성해서 사용해야 함

---------------------------------------
문제1. 정수 50, 실수 178.5, 문자 'A', boolean 값 true,
문자열 "홍길동"을 변수에 키보드를 통해 저장하고, 출력하세요.  
단, 출력은 println을 사용
class name : Practice1.java

<실행 결과>
정수 입력 : 50
실수 입력 : 178.5
문자 입력 : A
boolean 입력 : true
문자열 입력 : 홍길동

--- 결과 확인 ---
정수 : 50
실수 : 178.5
문자 : A
boolean : true
문자열 : 홍길동

------------------------------------------------
문제2. 다음을 입력받아 삼각형넓이를 계산하시오
      삼각형넓이 = (밑변 * 높이)/2

class name : Practice2.java

<실행 결과>
--입력--
**** 삼각형의 넓이 구하기  ****
밑변 :  10.0  
높이 :   3.0
   
--출력--
넓이 :   XX.XX  	<--- 소수점 2자리까지 출력하시오.


-------------------------------------
문제3. Scanner를 사용하여 아래와 같이 결과와 나오도록 해보세요.
필요한 변수를 만들어서 사용..

class name : Practice3.java

<실행 결과>
이름? 홍길동
국어? 90
영어? 80
수학? 70

이름 : 홍길동
총점 : 240


----------------------------------
* 자바 명령어의 종류
1) 연산자
2) 제어문
3) API 클래스

* 연산자 (operator)
=> 수학 기호를 명령어로 만든 것
=> 주의 : 프로그램에서 사용하는 문자는 키보드에 있는 문자만을 사용함
=> 사칙연산 : + - * /
=> 부등호 : < <= > >=
=> 집합 : && (and, 교집합)  || (or, 합집합)  ! (not, 여집합)


* 증감 연산자
=> 반드시 변수와 함께 사용하여서 변수 값을 1증가 시키거나 1감소 시키는 명령어
=> 우선 순위가 2개인 연산자
=> a++ : 꼴찌 순위, 대입 연산자보다 더 낮음
     ++a : 2순위, 소괄호 다음 순위
1) ++
  => 변수값 1증가
2) --
  => 변수값 1감소

----------------------------------------------
문제1. 이름이 L(name)인 사람의 기본급(basePay)이 2500000일때 3.3% 세금(tax)과 월급(salary)을 계산하시오. 
데이터는 반드시 변수에 저장하기.

세금 = 기본급 * 3.3%   [3.3% => 0.033]
월급 = 기본급 - 세금
      
Class Name : src/Practice1.java

<실행 결과>
이름 입력 : L
기본급 입력 : 2500000

*** L의 월급 ***
기본급 : 2500000원
세금   : 82500원
월급   : 2417500원

------------------------------------------------
문제2. 금액(돈)이 5679원일때 아래와 같이 출력하시오.
=> 금액은 10000원 미만으로 입력받기

Class Name : src/Practice2.java

<실행결과>
금액 입력 : 5679

금액 : 5679원
천원 : 5장
백원 : 6개
십원 : 7개
일원 : 9개


---------------------------------

* 변수의 초기화
1) 변수를 만들고 맨 처음 값을 저장하는 것을 말함
2) 프로그램 동작 중간에 변수값을 기본값으로 변경하는 것
   => 정수 : 0
   => 실수 : 0
   => 문자 : 0
   => boolean : false
   => 문자열 : null


=====================================
@2024.3.27

* 자바 명령어의 종류
1) 연산자
2) 제어문
3) API 클래스

* 삼항 연산자 (= 조건 연산자)
=> 조건에 따라서 데이터를 선택하는 명령어
(조건식) ? 값1 : 값2
=> 조건식이 true이면 값1을 선택
     조건식이 false이면 값2를 선택


------------------------------------------------------------
문제3. 삼항 연산자(조건 연산자)를 이용해서 아래와 같이 결과가 나오도록 
  프로그램을 작성하세요.

Class Name : src/Practice3.java

<실행 결과>
첫 번째 수 = 5
두 번째 수 = 7
첫 번째 수(5)가 두 번째 수(7)보다 작은 수입니다.    <- 문자열 변수1

첫 번째 수 = 7
두 번째 수 = 5
첫 번째 수(7)가 두 번째 수(5)보다 큰 수입니다.	<- 문자열 변수2

첫 번째 수 = 5
두 번째 수 = 5
첫 번째 수(5)와 두 번째 수(5)는 같은 수입니다.	<- 문자열 변수3


------------------------------------------
* 최우선 연산자
=> ()
=> 소괄호안의 명령어를 제일 먼저 실행시키는 명령어
-------------------------------------------------
* 자동 형변환 (= 자료형 변환)
 => 데이터의 형태가 다를 경우, 자동적으로 자료형을 통일시키는 것
 => 작은 형태의 데이터가 큰 형태의 데이터로 자동적으로 바뀌는 것
 
* 강제 형변환 (= 자료형 변환)
 => 강제로 데이터의 형태를 바꾸는 것
 => 데이터의 손상이 발생할 수 있음
 => (자료형) : 형변환 연산자 또는 cast 연산자

--------------------------------------------------
* 제어문
1) 조건문
  if, switch
2) 반복문
  for, while, do-while
3) 기타 
  => 단독으로 사용을 못하고 조건문과 반복문과 결합해서 사용되는 명령어
  => else, continue, break

* 조건문
 if, switch
=> 조건에 따라서 명령어를 선택하는 명령어

1. if
=> ~이라면
=> 조건식이 참(true)이라면 명령문을 실행하라.
=> 조건식의 최종 결과값은 반드시 boolean 값이어야 함.
(1) 사용법1
  if(조건식) {
	명령문;
  }
(2) 사용법2
  => 명령문이 1개일 경우에는 중괄호를 생략할 수 있음
  if(조건식) 명령문;
 
2. if-else
else : 그밖에
=> 조건식이 참일 경우에는 if에 있는 명령어가 실행되고
     조건식이 거짓일 경우에는 else에 있는 명령어가 실행됨
(1) 사용법1
  if(조건식) {
	명령문;
  } else {
	명령문;
  }
(2) 사용법2
  => 명령문이 1개일 경우에는 중괄호를 생략할 수 있음
  if(조건식) 명령문;
  else 명령문;

3. 다중 if-else
=> if-else를 여러개 중복해서 사용하는 것
=> 다중 선택문으로 사용 (여러개 중에서 1개를 선택할 때)

1) 사용법1
if(조건식) 명령문;
else if(조건식) 명령문;
      else if(조건식) 명령문;
            else 명령문;

2) 사용법2
if(조건식) 명령문;
else if(조건식) 명령문;
else if(조건식) 명령문;
else 명령문;
-----------------------------------------------------------------------
문제3. if-else를 이용해서 아래와 같이 결과가 나오도록 
  프로그램을 작성하세요.

Class Name : src/Practice3.java

<실행 결과>
첫 번째 수 = 5
두 번째 수 = 7
첫 번째 수(5)가 두 번째 수(7)보다 작은 수입니다.
(또는)
첫 번째 수 = 15
두 번째 수 = 7
첫 번째 수(15)가 두 번째 수(7)보다 큰 수입니다.
(또는)
첫 번째 수 = 7
두 번째 수 = 7
첫 번째 수(7)와 두 번째 수(7)는 같은 수입니다.

-----------------------------------------------------------------
문제4. 국어, 영어, 수학 3과목의 점수를 입력받아서 합격인지 불합격인지 출력하시오. if-else문을 사용.
합격은 평균이 60 이상이어야 하고, 과목의 점수는 40점이상이어야 한다.
불합격은 평균이 60점 미만이거나, 한과목이라도 40점 미만이면 과락으로 불합격처리 한다.

Class Name : src/Practice4.java

<실행 결과>
국어 점수 : 98
영어 점수 : 90
수학 점수 : 85

합격

-----------------------------------------------------------------
문제5. if-else를 이용하여 주민번호 7번째 자리를 입력받은 후, 
      몇 년대, 성별을 출력하세요. (ex: 980101-1234567)
1 : 1900년대 남성
2 : 1900년대 여성
3 : 2000년대 남성
4 : 2000년대 여성

Class Name : src/Practice5.java

<실행 결과>
주민번호 7번째 자리를 입력하세요 : 1
당신은 1900년대생 남성이십니다.


--------------------------------------------

* 데이터가 같은 지 검사하는 방법
1) 정수, 실수, 문자, boolean값
   == 연산자 사용

   if(num == 1) {
	명령문;
   }

2) 문자열
   equals() 함수 사용

   String str1 = "abc";
   if(str1.equals("abc") ) {
	명령문;
   }

---------------------------------------------------

문제6. 성적처리 프로그램
      중간고사, 기말고사, 레포트, 출석점수를 입력받아서 계산하시오
Class Name : src/Practice6.java

조건1) (중간+기말)/2    ---> 60%
          과제   	       ---> 20%
          출석               ---> 20%     
          성적 = (중간+기말)/2 * 0.6 + 과제 * 0.2 + 출석 * 0.2
조건2)  90이상 'A'학점     		조건3) A,B학점  ---->"excellent"
	  80이상 'B'학점        		  	 C,D학점  ---->"good"
          70이상 'C'학점        		  	 F학점    ---->"poor"
          60이상 'D'학점        		  	 (if~else문이용) 
          나머지 'F'학점
         (if~else문이용)

<실행 결과>
중간고사를 입력하시오 : 90
기말고사를 입력하시오 : 89
과제점수를 입력하시오 : 99
출석점수를 입력하시오 : 100

성적=93.50         <---소수이하 2째자리까지
학점=A              
평가=excellent


=========================================
@2024.3.28

* switch
=> 다중 선택 명령어
=> 여러개 중에서 1개를 선택하는 명령어

=> 조건식 연산 결과로 나온 데이터와 정확히 일치하는 곳으로 이동해서
     명령문을 실행하는 명령어
=> 조건식 연산 결과로 나오는 데이터는
     반드시 정수, 문자, 문자열만 사용할 수 있음
=> 조건식 자리에는 변수가 올 수도 있음

switch(조건식) {
    case 값1 : 
	명령문;
	명령문;
	break;
    case 값2 : 
	명령문;
	break;
    case 값3 : 
	명령문;
	break;
    default : 
	명령문;
}

1) 정수
int a = 3;
switch(a) {
    case 1:
	명령문;
	명령문;
	break;
    case 2:
	명령문;
	break;
    default:
	명령문;
}

2) 문자
char a = 'C';
switch(a) {
    case 'A':
	명령문;
	명령문;
	break;
    case 'B':
	명령문;
	break;
    default:
	명령문;
}

3) 문자열
String a = "F";
switch(a) {
    case "AB":
	명령문;
	명령문;
	break;
    case "CD":
	명령문;
	break;
    default:
	명령문;
}

---------------------------------------------------
문제7. 성적처리 프로그램
      중간고사, 기말고사, 레포트, 출석점수를 입력받아서 계산하시오
Class Name : src/Practice7.java

조건1) (중간+기말)/2    ---> 60%
          과제   	       ---> 20%
          출석               ---> 20%     
          성적 = (중간+기말)/2 * 0.6 + 과제 * 0.2 + 출석 * 0.2
조건2)  90이상 'A'학점     		조건3) A,B학점  ---->"excellent"
	  80이상 'B'학점        		  	 C,D학점  ---->"good"
          70이상 'C'학점        		  	 F학점    ---->"poor"
          60이상 'D'학점        		  	 (switch문이용) 
          나머지 'F'학점
         (switch문이용)

<실행 결과>
중간고사를 입력하시오 : 90
기말고사를 입력하시오 : 89
과제점수를 입력하시오 : 99
출석점수를 입력하시오 : 100

성적=93.50         <---소수이하 2째자리까지
학점=A              
평가=excellent


-------------------------------------------------

* 제어문
1) 조건문 : if, switch
2) 반복문

* 반복문
=> for, while, do-while

1. for
=> ~하는 동안
=> 조건식이 참일 동안 명령문을 반복실행하는 명령문
=> 일반적으로 for문 1개당 변수 1개를 사용함
     -> 변수의 값을 조절해서 명령문을 몇번 반복시킬 지 설정함

1) 기본 구조
for(초기값; 조건식; 증감식) {
	명령문;
}

2) 사용예

    for(int i=0; i<3; i++) {
	명령문;
    }

    for(int i=3; i>0; i--) {
	명령문;
    }

2. 다중 for문
=> for문안에 명령문으로 다시 for문을 사용하는 것

for(초기값; 조건식; 증감식) {
	for(초기값; 조건식; 증감식) {
		명령문;
	}
}

1) 사용예
    for(int i=0; i<3; i++) {

	for(int j=0; j<2; j++) {
		명령문;
	}	
    }

-----------------------------------------------------
문제4. 1부터 10까지의 합을 구해보세요
for문을 이용하세요.

Class Name : src/Practice4.java

<실행 결과>
1부터 10까지의 합 = 55

------------------------------------------------------
문제5. 아래와 같이 별탑을 출력시켜 보세요.
for문을 이용하세요.

Class Name : src/Practice5.java

<실행 결과>
*
**
***
****
*****

--------------------------------------------------
문제6. 아래와 같이 별탑을 출력시켜 보세요 
for문을 이용하세요.

Class Name : src/Practice6.java

<실행 결과 1>
    *
   **
  ***
 ****
*****

-----------------------------------------------
문제7. 아래와 같이 별탑을 출력시켜 보세요 
for문을 이용하세요.

Class Name : src/Practice7.java

<실행 결과>
    *
   ***
  *****
 *******
*********

---------------------------------------

* while
=> ~하는 동안
=> for문을 간략화시킨 명령어
=> 횟수를 제한하지 않고 명령문을 반복실행하기 위해서 사용
=> for    : 횟수 제한 반복문
     while : 조건 제한 반복문

for(; 조건식; ) {
	명령문;
}

1) 기본 구조
    while(조건식) {
	명령문;
    }

* do-while
1) 기본 구조
    do {
	명령문;
    } while(조건식);
=========================================
@2024.3.29

* 명령문
1. 연산자
2. 제어문
3. API 클래스

* 제어문 
1. 조건문
   if, switch
2. 반복문
   for, while, do-while
3. 기타
   else, break, continue

----------------------------------
문제8. 아래와 같이 메뉴를 출력해 보세요.
while문을 사용하세요.

Class Name : src/Practice8.java

<실행 결과>
**********
1. 입력
2. 검색
3. 삭제
4. 종료
**********
번호 선택 : 1

입력을 선택하였습니다.

**********
1. 입력
2. 검색
3. 삭제
4. 종료
**********
번호 선택 : 4

프로그램을 종료합니다.


-----------------------------------------------------------
문제9. 키보드로 입력된 데이터로 예금, 출금, 잔고, 종료 기능을 제공하는
간단 계좌관리 프로그램을 작성하세요.
Class Name : src/Practice9.java

<실행 결과>
1. 입금 2. 출금 3. 잔고 4. 종료
번호 선택 : 1
입금액 : 10000

1. 입금 2. 출금 3. 잔고 4. 종료
번호 선택 : 2
출금액 : 8000

1. 입금 2. 출금 3. 잔고 4. 종료
번호 선택 : 3
잔고액 : 2000

1. 입금 2. 출금 3. 잔고 4. 종료
번호 선택 : 4
프로그램을 종료합니다.

----------------------------------------------------
문제10. 10~99 사이의 난수를 2개 발생하여 합을 맞추는 게임
	- 문제수는 총 5문제를 제공한다
	- 1문제당 점수 20점씩
	- 만약 틀리면 기회를 1번 더 제공한다
   - import java.util.Random;	  
     Random random = new Random(); // 임의 숫자를 만드는 클래스
     int num = random.nextInt(90) + 10;  // 0~89 + 10 => 10~99 사이 정수 1개 생성

Class Name : src/Practice10.java

<실행 결과>
[1] 25 + 36 = 45
틀렷따..
[1] 25 + 36 = 61
딩동뎅

[2] 45 + 56 = 101
딩동뎅

......

[5] 10 + 67 = 89
틀렷따..
[5] 10 + 67 = 78
틀렷따.. 정답 : xx

당신은 총 2문제를 맞추어서 40점 입니다
continue(y/n) : n 
프로그램을 종료합니다

-----------------------------------------------------------------

* 자바에서 대량의 데이터 저장하기
1. 배열
2. 리스트


* 변수들 만들기
1. 일반변수
=> 데이터 1개를 저장하는 변수
int a1;
int a2;
int a3;

a1 = 5;
System.out.println(a1);

2. 배열
=> 한꺼번에 많은 변수를 만드는 방법
=> 같은 자료형의 변수들의 집합
=> 변수에 데이터를 저장하기 위해서는 변수명이 필요함
=> 배열은 자동적으로 변수명이 만들어짐
=> 배열은 자동적으로 기본값으로 초기화되어짐
     정수 : 0
     실수 : 0
     문자 : 0
     문자열 : null
     boolean : false

(1) 배열의 구조
자료형[] 배열명 = new 자료형[변수의 개수];
=> new : 변수들을 만들라고 요청하는 명령어

(2) 배열 만드는 방법
1) 방법1
int[] a = new int[3];

2) 방법2
int[] a;
a = new int[3];

3) 방법3
int[] a = {1, 2, 3};

(3) 사용예
예1) 정수 배열
int[] a = new int[3];
a[0] = 5;
a[1] = 6;
a[2] = 7;

System.out.println(a[0]);
System.out.println(a[1]);
System.out.println(a[2]);

for(int i=0; i<a.length; i++) {
	System.out.println(a[i]);
}

예2) 문자열 배열
String[] st = new String[3];
st[0] = "AB";
st[1] = "CD";
st[2] = "EF" 

for(int i=0; i<st.length; i++) {
	System.out.println(st[i]);
}

* c언어에서의 배열 만들기
1) int a[3];
2) int *pa = new int[3];   // 동적할당

=========================================
@2024.4.1

---------------------------
문제4. 배열의 크기를 입력받아서 배열을 생성하고
데이터 입력후 출력하시오

Class Name : src/Practice4.java

<실행 결과>
배열 크기 : 3
ar[0] : 25 
ar[1] : 36
ar[2] : -78   
      
25  36  -78
합 = -17
최대값 = 36
최소값 = -78


---------------------------------------
문제5. 크기가 50개인 문자배열을 만들어서 65~90('A'~'Z') 사이의 난수를
  발생시켜 저장한 후 출력하시오. 
- 1줄에 10개씩 출력
- A ~ Z까지 몇개인지 출력 => 배열을 만들어서 사용 (크기 : 26)
- import java.util.Random;	  
  Random random = new Random(); // 임의 숫자를 만드는 클래스
  int num = random.nextInt(26) + 65;  // 0~25 + 65 => 65~90 사이 정수 1개 생성

Class Name : src/Practice5.java

<실행 결과>
D F A G H I J K L T
O P W E R F V A S B
P Y R O L E E Z L I
F E U Z T U P P P A
S P G B F F O W J C

A : 2
B : 3
...
X : 0
Y : 1
Z : 0

------------------------------------------
문제6. 주차 관리 프로그램을 작성하세요.
- 주차는 5대를 할 수 있다. => 배열로 변수만들기
- 주차된 곳 : true, 비어있는 곳 : false
Class Name : src/Practice6.java

<실행 결과>
주차 관리 프로그램
**************
   1. 입차
   2. 출차
   3. 리스트
   4. 종료
**************
  메뉴 : 

-- 1번인 경우
위치 입력 : 3
3위치에 입차 : 이미 주차되어있습니다
                    (or 주차되었습니다)

-- 2번인 경우
위치 입력 : 4
4위치에 출차 : 주차되어 있지않습니다
                   (or 출차되었습니다)

-- 3번인 경우
1위치 : true
2위치 : false
3위치 : true
4위치 : false
5위치 : false

-- 4번인 경우
프로그램 종료

-------------------------------------------

* 알고리즘
=> 어떤 문제가 주어졌을 때, 그 문제를 해결하는 방법

* 배열의 차원
=> 초등학교 1반의 국어 성적
=> 1반의 학생수는 30명
=> 1학년은 10반
=> 6학년까지 전부

일반변수 				1차원 배열				2차원 배열				3차원 배열
=> 데이터 1개 저장 변수		=> 일반변수들의 집합		=> 1차원 배열들의 집합		=> 2차원 배열들의 집합
										30 : 1차원 배열의 크기		6 : 2차원 배열의 개수
										10 : 1차원 배열의 개수					   면 행  열
int kor1;				int[] kor1 = new int[30];		int[][] kor1 = new int[10][30];	int[][][] kor = new int[6][10][30];
int kor2;				int[] kor2 = new int[30];		int[][] kor2 = new int[10][30];
int kor3;				int[] kor3 = new int[30];		int[][] kor3 = new int[10][30];
...					...					...
int kor30;				int[] kor10 = new int[30];		int[][] kor6 = new int[10][30];


-------------------------------------------

문제7.  0이 들어간 자리에 합을 구하는 문제 
- 2차원 배열을 이용하세요

1  2  3  0			int[][] a = {{1, 2, 3, 0},
4  5  6  0				      {4, 5, 6, 0},
7  8  9  0				      {7, 8, 9, 0},
0  0  0  0				      {0, 0, 0, 0}};

Class Name : src/Practice7.java

<실행 결과>
 1  2  3   6
 4  5  6  15
 7  8  9  24
12 15 18 45

--------------------------------------

* 함수 (function)
=> 어떤 기능을 수행하는 명령어들을 집합
=> 함수의 기능 : 입력, 연산, 출력
=> 주의 : static을 붙여서 함수를 만들어서 사용한다.
=> 함수는 독립된 블럭이기 때문에 함수안에 소속된 변수들은
     독립적으로 사용된다.
     함수안의 변수들은 다른 함수와 공유되지 않는다.
=> 함수명은 어떤 기능인지를 알아볼수 있는 단어를 사용하는 것이 좋다.

1) 기본 구조
리턴자료형 함수명(매개변수) {
	명령문;
	return 데이터;
}

2) 예
수학 : f(x) = x+1
	f(1)
자바 :
	int f(int x) {
		retrun x+1;
	}
	f(1);


=========================================
@2024.4.2

* 블럭 (block)
=> 명령어들의 집합
=> { }

* 두 단어 이상으로 1단어를 만드는 방법
1) 단어 사이에 _ 사용
  hello_world
2) 낙타체 사용
  => 단어가 새로 시작될 때마다 첫글자를 대문자로 시작함
  helloWorld

--------------------------------------------------------
문제9. 값을 입력받아 함수호출하여 처리하시오

Class Name : src/Practice9.java

[처리조건]
1. main함수
public static void main(String args[]) {
	// 필요한 변수 만들기
	// input_name()함수를 호출하여 품명을 입력 받으시오 
	// input_num()함수를 호출하여, 수량과 단가를 입력 받으시오
	// compute()함수를 호출하여 결과값을 받아서, 총액에 저장하시오
	// output() 함수를 호출하여 결과를 아래와 같이 출력하시오
}
2. compute()함수에서 계산된 결과를 리턴하시오
    (계산방법 : 총액 = 수량 * 단가)

<실행 결과>
품명을 입력하시오 : apple
수량을 입력하시오 : 10
단가를 입력하시오 : 1200

품명 : apple
수량 : 10
단가 : 1200
총액 : 12000원










